name: Deploy frontend to S3 + CloudFront

on:
  push:
    branches: [ "release" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
  VITE_APP_URL: ${{ secrets.VITE_APP_URL }}  

concurrency:
  group: deploy-release
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Configure AWS credentials 
        if: ${{ vars.AWS_ROLE_TO_ASSUME != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure AWS credentials (access keys fallback)
        if: ${{ vars.AWS_ROLE_TO_ASSUME == '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync files to S3 with correct content types
        run: |
          aws s3 sync ./dist s3://$S3_BUCKET --delete \
            --exclude "*.html" \
            --exclude "*.js" \
            --exclude "*.css"
          
          aws s3 sync ./dist s3://$S3_BUCKET \
            --exclude "*" \
            --include "*.html" \
            --content-type "text/html" \
            --cache-control "no-cache, no-store, must-revalidate"
          
          aws s3 sync ./dist s3://$S3_BUCKET \
            --exclude "*" \
            --include "*.js" \
            --content-type "text/javascript"
          
          aws s3 sync ./dist s3://$S3_BUCKET \
            --exclude "*" \
            --include "*.css" \
            --content-type "text/css"

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
